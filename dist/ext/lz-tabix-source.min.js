/*! Locuszoom 0.13.4 */
var LzTabix;(()=>{"use strict";var e={n:r=>{var t=r&&r.__esModule?()=>r.default:()=>r;return e.d(t,{a:t}),t},d:(r,t)=>{for(var a in t)e.o(t,a)&&!e.o(r,a)&&Object.defineProperty(r,a,{enumerable:!0,get:t[a]})},o:(e,r)=>Object.prototype.hasOwnProperty.call(e,r)},r={};e.d(r,{default:()=>s});const t=tabix;var a=e.n(t);function i(e){const r=e.Adapters.get("BaseAdapter");e.Adapters.add("TabixUrlSource",class extends r{parseInit(e){if(!e.parser_func||!e.url_data)throw new Error("Tabix source is missing required configuration options");this.parser=e.parser_func,this.url_data=e.url_data,this.url_tbi=e.url_tbi||`${this.url_data}.tbi`;const r=e.params||{};if(this.params=r,this._overfetch=r.overfetch||0,this._overfetch<0||this._overfetch>1)throw new Error("Overfetch must be specified as a fraction (0-1) of the requested region size");this._reader_promise=a().urlReader(this.url_data,this.url_tbi).catch((function(){throw new Error("Failed to create a tabix reader from the provided URL")}))}fetchRequest(e){return new Promise(((r,t)=>{const a=e.start,i=e.end,s=this._overfetch*(i-a),o=e.start-s,n=e.end+s;this._reader_promise.then((a=>{a.fetch(e.chr,o,n,(function(e,a){a&&t(new Error("Could not read requested region. This may indicate an error with the .tbi index.")),r(e)}))}))}))}normalizeResponse(e){return e.map(this.parser)}})}"undefined"!=typeof LocusZoom&&LocusZoom.use(i);const s=i;LzTabix=r.default})();
//# sourceMappingURL=lz-tabix-source.min.js.map